{"version":3,"sources":["../../src/js/form-error.js"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","fn","Default","Event","INPUT_DATA_API","INVALID_DATA_API","SUBMIT_DATA_API","FormError","element","config","this","_element","_controls","slice","call","elements","_wasValidated","_addControlListener","_addFormListener","_this","forEach","e","$e","feedback","next","get","closest","find","data","on","event","validationMessage","innerText","_this2","setAttribute","checkValidity","preventDefault","stopPropagation","c","classList","add","_jQueryInterface","relatedTarget","each","Constructor","noConflict"],"mappings":";;;;;6cAeA,IAAMA,EAAqB,YAErBC,EAAqB,eACrBC,EAAS,IAAgBD,EACzBE,EAAqB,YACrBC,EAAqBC,EAAEC,GAAGN,GAE1BO,EAAU,GAIVC,EAAQ,CACVC,eAAc,QAAgBP,EAAYC,EAC1CO,iBAAgB,UAAgBR,EAAYC,EAC5CQ,gBAAe,SAAgBT,EAAYC,GAazCS,aACF,SAAAA,EAAYC,EAASC,GACjBC,KAAKC,SAAaH,EAClBE,KAAKE,UAAa,GAAGC,MAAMC,KAAKN,EAAQO,SAAU,GAElDL,KAAKM,eAAgB,EAErBN,KAAKO,sBACLP,KAAKQ,8CAkBTD,oBAAA,WAAqB,IAAAE,EAAAT,KACjBA,KAAKE,UAAUQ,QAAQ,SAAAC,GACnB,IAAIC,EAAKtB,EAAEqB,GACPE,EAAWD,EAAGE,KAAK,qBAAqBC,IAAI,GAI5CF,EAFAA,GACaD,EAAGI,QAAQ,eACNC,KAAK,qBAAqBF,IAAI,GAGjDF,GACCD,EAAGM,KAAK,WAAYL,GAExBD,EAAGO,GAAG1B,EAAME,iBAAkB,SAAAyB,GACvBX,EAAKH,eAAiBK,EAAEU,mBAAqBT,EAAGM,KAAK,cACpDN,EAAGM,KAAK,YAAYI,UAAYX,EAAEU,qBAG1CT,EAAGO,GAAG1B,EAAMC,eAAgB,SAAA0B,GACrBX,EAAKH,eAAiBK,EAAEU,mBAAqBT,EAAGM,KAAK,cACpDN,EAAGM,KAAK,YAAYI,UAAYX,EAAEU,0BAKlDb,iBAAA,WAAkB,IAAAe,EAAAvB,KACdA,KAAKC,SAASuB,aAAa,aAAc,IAEzClC,EAAEU,KAAKC,UAAUkB,GAAG1B,EAAMG,gBAAiB,SAAAe,GACnCY,EAAKtB,SAASwB,kBACdd,EAAEe,iBACFf,EAAEgB,mBAGNJ,EAAKrB,UAAUQ,QAAQ,SAAAkB,GACfA,EAAEH,iBACCnC,EAAEsC,GAAGV,KAAK,cACT5B,EAAEsC,GAAGV,KAAK,YAAYI,UAAYM,EAAEP,qBAIhDE,EAAKtB,SAAS4B,UAAUC,IAAI,iBAC5BP,EAAKjB,eAAgB,OAMtByB,iBAAP,SAAwBhC,EAAQiC,GAC5B,OAAOhC,KAAKiC,KAAK,WACb,IAAIf,EAAO5B,EAAEU,MAAMkB,KAAKhC,GAEnBgC,IACDA,EAAO,IAAIrB,EAAUG,MACrBV,EAAEU,MAAMkB,KAAKhC,EAAUgC,4FAlE/B,MAxCmB,wCA4CnB,OAAO1B,WA0EfF,EAAEC,GAAGN,GAAQY,EAAUkC,iBACvBzC,EAAEC,GAAGN,GAAMiD,YAAcrC,EACzBP,EAAEC,GAAGN,GAAMkD,WAAa,WAEtB,OADA7C,EAAEC,GAAGN,GAAQI,EACNQ,EAAUkC","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap Form Error (v0.0.1): form-error.js\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-form-error/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'formerror'\nconst VERSION            = '0.0.1'\nconst DATA_KEY           = 'bs.formerror'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {}\n\nconst DefaultType = {}\n\nconst Event = {\n    INPUT_DATA_API      : `input${EVENT_KEY}${DATA_API_KEY}`,\n    INVALID_DATA_API    : `invalid${EVENT_KEY}${DATA_API_KEY}`,\n    SUBMIT_DATA_API     : `submit${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst ClassName = {}\n\nconst Selector = {}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass FormError {\n    constructor(element, config) {\n        this._element   = element\n        this._controls  = [].slice.call(element.elements, 0);\n\n        this._wasValidated = false\n\n        this._addControlListener()\n        this._addFormListener()\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Public\n\n\n    // Private\n\n    _addControlListener(){\n        this._controls.forEach(e => {\n            let $e = $(e)\n            let feedback = $e.next('.invalid-feedback').get(0)\n\n            if(!feedback){\n                let parent = $e.closest('.form-group');\n                feedback = parent.find('.invalid-feedback').get(0)\n            }\n\n            if(feedback)\n                $e.data('feedback', feedback)\n\n            $e.on(Event.INVALID_DATA_API, event => {\n                if(this._wasValidated && e.validationMessage && $e.data('feedback'))\n                    $e.data('feedback').innerText = e.validationMessage\n            })\n\n            $e.on(Event.INPUT_DATA_API, event => {\n                if(this._wasValidated && e.validationMessage && $e.data('feedback'))\n                    $e.data('feedback').innerText = e.validationMessage\n            })\n        })\n    }\n\n    _addFormListener(){\n        this._element.setAttribute('novalidate', '')\n\n        $(this._element).on(Event.SUBMIT_DATA_API, e => {\n            if(!this._element.checkValidity()){\n                e.preventDefault()\n                e.stopPropagation()\n            }\n\n            this._controls.forEach(c => {\n                if(!c.checkValidity()){\n                    if($(c).data('feedback'))\n                        $(c).data('feedback').innerText = c.validationMessage\n                }\n            })\n\n            this._element.classList.add('was-validated')\n            this._wasValidated = true\n        })\n    }\n\n    // Static\n\n    static _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n            let data = $(this).data(DATA_KEY)\n\n            if (!data) {\n                data = new FormError(this)\n                $(this).data(DATA_KEY, data)\n            }\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = FormError._jQueryInterface\n$.fn[NAME].Constructor = FormError\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return FormError._jQueryInterface\n}\n\nexport default FormError"]}